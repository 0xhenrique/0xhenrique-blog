<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
	<title>0xhenrique</title>
	<link>https://0xhenrique.neocities.org/tags/programming/</link>
	<description>Recent content in Programming on 0xhenrique</description>
	<generator>Hugo -- gohugo.io</generator>
	<language>en-us</language>
	<lastBuildDate>Sat, 17 Aug 2024 07:44:33 +0100</lastBuildDate>
    
        <atom:link href="https://0xhenrique.neocities.org/tags/programming/index.xml" rel="self" type="application/rss+xml" />
	
	
	<item>
		<title>Why I Chose Guix Over Nix</title>
		<link>https://0xhenrique.neocities.org/why-i-chose-guix-over-nix/</link>
		<pubDate>Mon, 23 Sep 2024 04:35:07 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/why-i-chose-guix-over-nix/</guid>
		<description>&lt;p&gt;I&amp;rsquo;ve been using NixOS for quite some time, but somehow I ended up with Guix. In this article I will try to write about the reasons why I don&amp;rsquo;t use Nix anymore.&lt;/p&gt;
&lt;h2 id=&#34;the-emacs--elisp--sicp--scheme-pipeline&#34;&gt;The Emacs &amp;gt; Elisp &amp;gt; SICP &amp;gt; Scheme pipeline&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ouSS2fe.png&#34; alt=&#34;SICP_2hu_version&#34;&gt;
I honestly don&amp;rsquo;t remember the first time I heard about Emacs, but I remember the first time I tried to use it I got gatekept by the Elisp magecraft.
After that, I spent some days trying to learn some basic concepts of this ancient text editor. Thanks to &lt;a href=&#34;https://learnxinyminutes.com/docs/elisp/&#34;&gt;https://learnxinyminutes.com/docs/elisp/&lt;/a&gt; I was able to write some simple functions to make my Emacs experience smoother. To be honest, I didn&amp;rsquo;t really liked to write Lisp back then, it sucked a lot for me. Even reading simple functions was a hassle since I wasn&amp;rsquo;t used to see through all the parenthesis.
At that time, I already knew about the &amp;lsquo;Structure and Interpretaion of Computer Programs&amp;rsquo; book, but didn&amp;rsquo;t read until then. It was only after seeing the MIT class linked below that I got hooked into computer magecraft:&lt;/p&gt;
&lt;p&gt;Lecture 1A: Overview and Introduction to Lisp: &lt;a href=&#34;https://www.youtube.com/watch?v=-J_xL4IGhJA&#34;&gt;https://www.youtube.com/watch?v=-J_xL4IGhJA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That was when I finally decided to read the SICP and, consequently, learn Scheme.&lt;/p&gt;
&lt;h2 id=&#34;the-nix-language-and-documentation-sucks&#34;&gt;The Nix language and documentation sucks&lt;/h2&gt;
&lt;p&gt;And that alone is huge win for Guix. Configuring Nix packages was a pain in the ass. Not because you need to set everything up from scratch (that&amp;rsquo;s not even a problem), but because the language is confusing as hell and the documentation doesn&amp;rsquo;t help. It&amp;rsquo;s not a secret, everywhere you go on the internet you will find people complaining about how the Nix language is hard to grasp, but no because it is complex, just because it lacks proper documentation. You can&amp;rsquo;t be sure to find what you&amp;rsquo;re looking for. All the information is fragmented on the internet, there is not a place where you can just find what you&amp;rsquo;re looking for.
At the end of the day you spend more time guessing &amp;ldquo;where the information is&amp;rdquo; rather &amp;ldquo;how to do X&amp;rdquo;.
For instance, here&amp;rsquo;s a comparison between the figlet package ported to Nix and the one ported to Guix:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9epJ4qs.png&#34; alt=&#34;Nix vs Guix&#34;&gt;&lt;/p&gt;
&lt;p&gt;And no, I&amp;rsquo;m not even talking about how the Nix code is bigger than the Scheme code, that&amp;rsquo;s not really a problem. The thing is, which one is easier to read? Which one is easier to maintain? Which one is more elegant? Which one is more expressive about what it does?
The Nix language was a mistake and I think it is the Achilles&amp;rsquo; heel of the Nix project. I can assure you that most of the people using NixOS right now don&amp;rsquo;t even know how the language works, most of the time tthey just copy and paste code that was already written by some Nix wizard and call it a day. But the moment you need to do something new you&amp;rsquo;re left in the lurch. But I have to admit, most of the Nix wizards are nice people and they will probably help you. The thing is, do you really want to depend so much on the community to get things done?&lt;/p&gt;
&lt;p&gt;Guix solves that. It&amp;rsquo;s not like you need to learn a complex language to start with Guix, Scheme is relatively simple and most of the time the docs are everything you need to get up and running. Packaging a program for Guix isn&amp;rsquo;t hard, I plan to make another blog post to delve into that soon.&lt;/p&gt;
&lt;h2 id=&#34;the-lisp-way-of-life&#34;&gt;The LISP way of life&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://imgs.xkcd.com/comics/lisp_cycles.png&#34; alt=&#34;Elegant weapons for a more&amp;hellip; civilized age&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are some reasons why some Emacs wizards stick to LISP: metaprogramming, macros, higher-order functions, recursion etc. Not only that, LISP is a crucial part of computer science history. It helps you understand why things are the way they are. It helps you understand mathematical concepts. It helps you understand functional programming. It helps you understand core concepts of programming, hence Scheme is used as the language for the SICP book.&lt;/p&gt;
&lt;p&gt;And yes, Nix also supports abstractions, but Guix&amp;rsquo;s use of Scheme provides more powerful and general ways to define those abstractions.
Since all the Guix configuration and packaging logic is expressed in Guile Scheme, you can deeply customise and program your system at at level.
For instance, you can define custom operating system services, package definitions, or system configuration options entirely in Guile Scheme.
You can&amp;rsquo;t really say the same for NixOS. The language itself is more limited to package definitions, which makes it harder to set system-level configurations. If you want to customise deeply at system-level you will probably need external scripting or some other configuration management tools.&lt;/p&gt;
&lt;p&gt;Scheme has a long history in theoretical computer science and has been used for decades in academic research and programming language design. Using Scheme to configure your system basically gives your superpowers, it&amp;rsquo;s pretty much like standing on the shoulders of giants.
To be honest I don&amp;rsquo;t see a point in learning such a complex language as Nix just to define packages. Scheme gives you so much potential for broader use cases other than package definitions. System configuration, scripting, automation, general programming, you name it. Even if you don&amp;rsquo;t plan to write packages for Guix you still can use Scheme for lots of other tasks, specially if your using the Guix operating system.&lt;/p&gt;
&lt;h2 id=&#34;guix-is-free-as-in-freedom&#34;&gt;Guix is Free (as in Freedom)&lt;/h2&gt;
&lt;p&gt;Guix places more emphasis on software freedom and adheres to the FSF standards for ethical distros.&lt;/p&gt;
&lt;p&gt;Yes, I do use some proprietary software, but that&amp;rsquo;s something I want to change. I would say that the only reason I still use the Linux kernel is because of the lack of free bluetooth drivers for my laptop. That&amp;rsquo;s something I also want to change. I made a mistake buying a bluetooth headphone, specially because I already knew that there were no free bluetooth drivers for me. I hope to abandon Linux and its proprietary binaries as soon as possible. Software freedom might be hard to achieve, but freedom in general isn&amp;rsquo;t easy to achieve.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://preview.redd.it/7ozal346p6kz.png?auto=webp&amp;amp;s=f1058e3a298c411182de3a9bd788f65cec5d1bc1&#34; alt=&#34;RMS_aboslutely_proprietary&#34;&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Guix Wallpapers</title>
		<link>https://0xhenrique.neocities.org/guix-wallpapers/</link>
		<pubDate>Fri, 20 Sep 2024 20:37:15 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/guix-wallpapers/</guid>
		<description>&lt;p&gt;I&amp;rsquo;ve been using Guix for quite some time now. It&amp;rsquo;s been a great experience so far!
Here are some wallpapers I&amp;rsquo;ve been collecting for my Guix desktop.&lt;/p&gt;
&lt;p&gt;I think it goes without saying that Suika is the perfect candidate to be the Guix mascot .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/se5Qk6P.png&#34; alt=&#34;1st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/bYxUNO7.png&#34; alt=&#34;2st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/KT1Uo39.png&#34; alt=&#34;3st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/LuEaj38.png&#34; alt=&#34;4st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/IGCGrEI.png&#34; alt=&#34;5st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/OyOJUyY.png&#34; alt=&#34;6st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/eb0qu4z.png&#34; alt=&#34;7st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/UyKmkHr.png&#34; alt=&#34;8st pape&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/yXVVoH8.png&#34; alt=&#34;9st pape&#34;&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Nazare Beach</title>
		<link>https://0xhenrique.neocities.org/nazare-beach/</link>
		<pubDate>Sat, 17 Aug 2024 07:44:45 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/nazare-beach/</guid>
		<description>&lt;p&gt;I visited Nazaré Beach last year (2023). Such a lovely place.
Shame on me for not taking my camera with me that day. I&amp;rsquo;m not a fan of smartphone cameras to be honest. Still, I couldn&amp;rsquo;t let the opportunity pass. Here are some photos I took that day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ATjnpyl.jpeg&#34; alt=&#34;1st photo&#34;&gt;&lt;/p&gt;
&lt;p&gt;According to Wikipedia, Nazaré is one of the most traditional Portuguese fishing villages, having the most popular bathing beach on the Portuguese west coast, where you can still find, on the sand, some women dressed in the traditional costume of seven skirts, taking care of the fish that dries in the sun, lined up on stakes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GwZIh3p.jpeg&#34; alt=&#34;2nd photo&#34;&gt;&lt;/p&gt;
&lt;p&gt;I plan to go back there in the winter, but this time I will remember to take my camera with me. I have an 18-55 and a 200mm, but I believe I will get better photos with the 200mm, especially in the higher parts. Not to mention that I will be able to aim further without losing too much sharpness.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/hxY0rcS.jpeg&#34; alt=&#34;3rd photo&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/8uRNHtF.jpeg&#34; alt=&#34;4th photo&#34;&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Monogatari - Text Editor in Python</title>
		<link>https://0xhenrique.neocities.org/monogatari/</link>
		<pubDate>Sat, 17 Aug 2024 07:44:33 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/monogatari/</guid>
		<description>&lt;h1 id=&#34;monogatari---text-editorhttpsgithubcomhenrique-marques-vsoftmonogatari&#34;&gt;&lt;a href=&#34;https://github.com/henrique-marques-vsoft/monogatari&#34;&gt;MONOGATARI - Text Editor&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/henrique-marques-vsoft/monogatari/master/pics/shinobu.gif&#34; alt=&#34;monogatari-movie scene shinobu kokorowatari&#34;&gt;&lt;/p&gt;
&lt;p&gt;Monogatari is a text editor built with Python using the Tkinter GUI library.&lt;/p&gt;
&lt;h2 id=&#34;installation-and-usage&#34;&gt;Installation and usage&lt;/h2&gt;
&lt;p&gt;Assuming you already have Python installed in your machine:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone git@github.com:all123all/monogatari.git
cd monogatari
python monogatari.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you&amp;rsquo;re using Linux you probably will need to install tk manually:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//Arch based distros
$ sudo pacman -S tk
//For Ubuntu
$ sudo apt-get install tk
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;goals&#34;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Basic text editor functionalities (create file, open file, exit etc.)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Black background and a colorpicker option to choose another color&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Test routine for the basic functionalities&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Release a package&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The close function is being called even when the file isn&amp;rsquo;t modified&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contribute-to-monogatari---text-editor&#34;&gt;Contribute to MONOGATARI - Text Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Click the fork button on top right&lt;/li&gt;
&lt;li&gt;Git clone your fork&lt;/li&gt;
&lt;li&gt;Connect with my repo:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git remote add all123all git://github.com/all123all/monogatari
$ git remote -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You are now ready to start to code! Just do as always:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git add .
$ git commit -m &amp;#34;fix: something that was fixed&amp;#34;
$ git push
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then you can create a pull request right here on Github. Just go to the Pull Requests tab and select &lt;code&gt;New pull request&lt;/code&gt; button to do so.&lt;/p&gt;
&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/henrique-marques-vsoft/monogatari/master/pics/print.png&#34; alt=&#34;monogatari on i3wm screenshot&#34;&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Lum - Linux Ubiquitous Marker</title>
		<link>https://0xhenrique.neocities.org/lum/</link>
		<pubDate>Sat, 17 Aug 2024 07:44:26 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/lum/</guid>
		<description>&lt;p&gt;Link: &lt;a href=&#34;https://github.com/henrique-marques-vsoft/lum&#34;&gt;https://github.com/henrique-marques-vsoft/lum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lum is a project I started as a way to escape the feeling of being tied to the web-browser when it comes to bookmarks.
The objective is relatively simple, to have access to my bookmarks outside of the browser. This way I could call my bookmarks from anywhere on the computer, whether from Vim, Emacs, the browser itself, the window manager or wherever.
I&amp;rsquo;m still not sure if I&amp;rsquo;m going to turn this project into a CLI tool or a library. I still need to try to integrate Lum with some other tool and evaluate which points I failed, which ones I need to improve and where I got things right.
I also wanted to have contact with Rust in practice. I have some things to say about the Rust language, but I think that will be for another post on this blog.&lt;/p&gt;
&lt;p&gt;For now, I&amp;rsquo;m using JSON to save the bookmarks, but to be honest I don&amp;rsquo;t know if I&amp;rsquo;ll keep this format until the end.
I&amp;rsquo;m still evaluating whether this would be the most practical and quickest way, considering that I already accumulated more than 12 thousand bookmarks at the height of my NEET time.
I don&amp;rsquo;t think parsing 12 thousand objects in JSON is efficient, but it&amp;rsquo;s something I still need to test in practice.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Internet Lurk Compilation #1</title>
		<link>https://0xhenrique.neocities.org/internet-lurk-compilation/</link>
		<pubDate>Sat, 17 Aug 2024 07:44:17 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/internet-lurk-compilation/</guid>
		<description>&lt;h2 id=&#34;general-findings&#34;&gt;General Findings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pure gold from the 90s: &lt;a href=&#34;https://lunduke.substack.com/p/the-computers-used-to-do-3d-animation&#34;&gt;https://lunduke.substack.com/p/the-computers-used-to-do-3d-animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Symbolics Internet Museum: &lt;a href=&#34;https://symbolics.com/museum/&#34;&gt;https://symbolics.com/museum/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;What is the relationship between Apple and Serial Experiments Lain? &lt;a href=&#34;https://www.cjas.org/~leng/apple-lain.htm&#34;&gt;https://www.cjas.org/~leng/apple-lain.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Cornell Anime Club: &lt;a href=&#34;https://www.cjas.org/&#34;&gt;https://www.cjas.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Appearances of MIT in Anime: &lt;a href=&#34;https://anime.mit.edu/resources/mit_in_anime&#34;&gt;https://anime.mit.edu/resources/mit_in_anime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How Emacs got into Tron: Legacy: &lt;a href=&#34;https://boingboing.net/2011/04/06/how-emacs-got-into-t.html&#34;&gt;https://boingboing.net/2011/04/06/how-emacs-got-into-t.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Jargon File: &lt;a href=&#34;http://www.catb.org/jargon/&#34;&gt;http://www.catb.org/jargon/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;neocities&#34;&gt;Neocities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lainzine (Lain Magazine): &lt;a href=&#34;https://lainzine.org/&#34;&gt;https://lainzine.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;About Software Privacy and other topics: &lt;a href=&#34;https://digdeeper.neocities.org/&#34;&gt;https://digdeeper.neocities.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reminds of Fauux: &lt;a href=&#34;https://blackwings.neocities.org/&#34;&gt;https://blackwings.neocities.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fauux: &lt;a href=&#34;https://fauux.neocities.org/&#34;&gt;https://fauux.neocities.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tatsumoto&amp;rsquo;s guide to Nihongo: &lt;a href=&#34;https://tatsumoto.neocities.org/&#34;&gt;https://tatsumoto.neocities.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;internet-archive-findings&#34;&gt;Internet Archive Findings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Oh! PC (Jul 01 1990) [Content in Japanese]: &lt;a href=&#34;https://archive.org/details/oh-pc-issue-127-jul-01-1990/Oh%21%20PC%20Issue%20127%20%28Jul%2001%201990%29/mode/2up&#34;&gt;https://archive.org/details/oh-pc-issue-127-jul-01-1990/Oh%21%20PC%20Issue%20127%20%28Jul%2001%201990%29/mode/2up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Comptiq Manazine [Content in Japanese]: &lt;a href=&#34;https://archive.org/search?query=comptiq&#34;&gt;https://archive.org/search?query=comptiq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Symbol of the Knights of Eastern Calculus: &lt;a href=&#34;https://web.archive.org/web/20200121124624/http://www.cjas.org/~leng/knights.htm&#34;&gt;https://web.archive.org/web/20200121124624/http://www.cjas.org/~leng/knights.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MSX Magazine (1985-02) [Content in Japanese]: &lt;a href=&#34;https://archive.org/details/msx-magazine-1985-02-ascii-jp/mode/2up&#34;&gt;https://archive.org/details/msx-magazine-1985-02-ascii-jp/mode/2up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;websites-i-visit-from-time-to-time&#34;&gt;Websites I visit from time to time&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;del&gt;modern&lt;/del&gt; Javascript approach to SICP: &lt;a href=&#34;https://sicp.sourceacademy.org/&#34;&gt;https://sicp.sourceacademy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A blog by Sam Greydanus: &lt;a href=&#34;https://greydanus.github.io/&#34;&gt;https://greydanus.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Xah Lee (he&amp;rsquo;s also one of the minds behind ergoemacs and xah-fly-keys): &lt;a href=&#34;https://xahlee.info/&#34;&gt;https://xahlee.info/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sasha Chua blog: &lt;a href=&#34;https://sachachua.com/blog/&#34;&gt;https://sachachua.com/blog/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lunduke Journal: &lt;a href=&#34;https://lunduke.substack.com/&#34;&gt;https://lunduke.substack.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you find a broken link or a website that shares things that are clearly illegal, please let me know by email so I can remove it: &lt;a href=&#34;mailto:hm2030master@proton.me&#34;&gt;hm2030master@proton.me&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Also, if you don&amp;rsquo;t want me to list your website here, feel free to contact me via email so I can remove it.&lt;/strong&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>About</title>
		<link>https://0xhenrique.neocities.org/about/</link>
		<pubDate>Sat, 17 Aug 2024 07:42:34 +0100</pubDate>
		
		<guid>https://0xhenrique.neocities.org/about/</guid>
		<description>&lt;h1 id=&#34;whois&#34;&gt;whois&lt;/h1&gt;
&lt;p&gt;Hello there! You can call me Henrique.
The main purpose of this website is to share some interesting things I find on the world wide web and the projects of mine.
Some of the stuff I work on &lt;a href=&#34;https://github.com/henrique-marques-vsoft&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;my-setup&#34;&gt;My setup&lt;/h2&gt;
&lt;p&gt;Nothing fancy to be honest. Since I spend most of my time inside Emacs, I don&amp;rsquo;t really &lt;em&gt;rice&lt;/em&gt; my computer.
I&amp;rsquo;ve been through that phase though. Remaping keybindings, customising themes, colourschemes etc.
Today things are simpler for me. Just my Emacs config and that&amp;rsquo;s it.&lt;/p&gt;
&lt;p&gt;Here are some of my configs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Laptop: Thinkpad T480&lt;/li&gt;
&lt;li&gt;OS: GNU Guix&lt;/li&gt;
&lt;li&gt;Shell: bash&lt;/li&gt;
&lt;li&gt;Resolution: 1920x1080 (1 monitor is enough for me)&lt;/li&gt;
&lt;li&gt;WM: EXWM&lt;/li&gt;
&lt;li&gt;Terminal: eshell/vterm/kitty&lt;/li&gt;
&lt;li&gt;CPU: Intel i5-8350U (8) @ 3.600GHz&lt;/li&gt;
&lt;li&gt;GPU: 😕&lt;/li&gt;
&lt;li&gt;RAM: 24Gb&lt;/li&gt;
&lt;li&gt;Text editor: Emacs (29)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keyboards&#34;&gt;Keyboards&lt;/h2&gt;
&lt;h3 id=&#34;the-charybdis-by-bastard-keyboards&#34;&gt;The Charybdis by Bastard Keyboards&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Right now I&amp;rsquo;m using the Charybdis. It simply feels &amp;ldquo;correct&amp;rdquo; to type with it.&lt;br&gt;
The only &lt;em&gt;drawback&lt;/em&gt; from this keyboard is the price, but I don&amp;rsquo;t think you will find a dactyl for a cheap price.&lt;br&gt;
As far as I know, there&amp;rsquo;s no company mass producing that type of keyboard.&lt;br&gt;
But at the end I think it&amp;rsquo;s worth it, at least for me it is.&lt;/p&gt;
&lt;h3 id=&#34;the-sofle-v1-by-mechboards-uk&#34;&gt;The Sofle V1 by Mechboards UK&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The other one I have (although don&amp;rsquo;t use very much anymore) is the Sofle V1 that I bought from Mechboards UK.
It was very nice to type on a &lt;em&gt;low profile&lt;/em&gt; keyboard. It&amp;rsquo;s not so expansive as the Charybdis.&lt;/p&gt;
</description>
	</item>
	
	</channel>
</rss>
